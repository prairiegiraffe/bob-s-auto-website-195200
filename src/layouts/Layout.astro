---
// All imports and TypeScript code goes here in the frontmatter
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  ogImage?: string;
}

const { 
  title, 
  description = 'Professional local service business providing reliable and expert services to your community. Contact us today for all your service needs.',
  keywords = 'local service, professional services, reliable business, community services',
  ogImage = '/og-image.jpg'
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImage} />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Custom Styles -->
    <style>
      :root {
        --primary-color: #3B82F6;
        --primary-dark: #2563EB;
        --primary-light: #60A5FA;
        --text-dark: #1F2937;
        --text-medium: #4B5563;
        --text-light: #6B7280;
        --bg-light: #F9FAFB;
        --border-color: #E5E7EB;
      }
      
      .font-inter {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
      }
      
      .font-poppins {
        font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
      }
      
      .btn-primary {
        background-color: var(--primary-color);
        color: white;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 500;
        text-decoration: none;
        display: inline-block;
        transition: background-color 0.2s ease;
      }
      
      .btn-primary:hover {
        background-color: var(--primary-dark);
      }
      
      .text-primary {
        color: var(--primary-color);
      }
      
      .bg-primary {
        background-color: var(--primary-color);
      }
      
      .border-primary {
        border-color: var(--primary-color);
      }
      
      .section-padding {
        padding: 80px 0;
      }
      
      @media (max-width: 768px) {
        .section-padding {
          padding: 60px 0;
        }
      }
      
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
      }
      
      .fade-in {
        animation: fadeIn 0.6s ease-in;
      }
      
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
      }
    </style>
    
    <title>{title}</title>
  </head>
  <body class="font-inter bg-white text-gray-900 antialiased">
    <Header />
    <main class="min-h-screen">
      <slot />
    </main>
    <Footer />
    
    <!-- Smooth scroll behavior -->
    <script>
      document.documentElement.style.scrollBehavior = 'smooth';
      
      // Add fade-in animation to elements when they come into view
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('fade-in');
          }
        });
      }, observerOptions);
      
      // Observe all sections for animation
      document.addEventListener('DOMContentLoaded', () => {
        const sections = document.querySelectorAll('section, .animate-on-scroll');
        sections.forEach(section => observer.observe(section));
      });
    </script>
  </body>
</html>